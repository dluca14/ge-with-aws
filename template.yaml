AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: aws-lambda-docker-ge

Parameters:
  Stage:
    Type: String
    Default: dev

Globals:
  Function:
    Timeout: 45
    MemorySize: 512

Resources:
  GEValidationsApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub GEValidationsApiGateway-${AWS::StackName}
      StageName: !Ref Stage # The stage name will be passed as an param on sam deploy when building the pipelines
      GatewayResponses:
        MISSING_AUTHENTICATION_TOKEN:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'*'"
              Cache-Control: "'no-cache'"
              Content-Type: "'application/json'"
          ResponseTemplates:
            "application/json": '{"message":"$context.error.messageString"}'
          #                                  "type": "$context.error.responseType",
          #                                  "statusCode": "'404'",
          #                                  "stage": "$context.stage",
          #                                  "resourcePath": "$context.resourcePath",
          #                                  "stageVariables.a": "$stageVariables.a"}'
          StatusCode: '404'

  RunGEValidationsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub RunGEValidations-${AWS::StackName}
      ImageUri: !Sub 479470245610.dkr.ecr.eu-central-1.amazonaws.com/ge-${Stage}-repo:latest
      PackageType: Image
      Events:
        RunValidationApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref GEValidationsApiGateway  # tells the Lambda to attach to the created API Gateway.
            Path: /validation
            Method: get
      Policies:
        - S3FullAccessPolicy:
            BucketName: validation-suites # bucket name without arn
        - S3FullAccessPolicy:
            BucketName: validation-results2 # bucket name without arn
        - S3FullAccessPolicy:
            BucketName: datadocs2 # bucket name without arn

Outputs:
  GEValidationsApiGateway:
    Description: 'API Gateway endpoint URL for run GE validations'
    Value: !Sub 'https://${GEValidationsApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/validation/'
#  GEValidationsApiGatewayRestApiId:
#    Description: 'API Gateway ARN for Basic AWS API Gateway'
#    Value: !Ref GEValidationsApiGateway
#    Export:
#      Name: GEValidationsApiGateway-RestApiId
#  GEValidationsApiGatewayRootResourceId:
#    Value: !GetAtt GEValidationsApiGateway.RootResourceId
#    Export:
#      Name: GEValidationsApiGateway-RootResourceId